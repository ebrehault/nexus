/* generated by Svelte v3.37.0 */
import {
	SvelteComponent,
	action_destroyer,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	listen,
	mount_component,
	noop,
	run_all,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "/node_modules/svelte/internal/index.mjs";

import AFButton from "/abfab/ui/button.svelte";
import { AbFabStore } from "../core.js";
import { EditorStore } from "./editor.js";
import { clickOutside } from "/abfab/ui/clickOutside.js";

function add_css() {
	var style = element("style");
	style.id = "svelte-145vp0j-style";
	style.textContent = "nav.svelte-145vp0j.svelte-145vp0j{width:3em}ul.svelte-145vp0j.svelte-145vp0j{list-style-type:none;margin:0;padding:0;text-align:center;display:flex;flex-direction:column;height:100%}li.svelte-145vp0j.svelte-145vp0j{padding:1em 0}.more-button.svelte-145vp0j.svelte-145vp0j{margin-top:auto}.menu.svelte-145vp0j.svelte-145vp0j{position:absolute;bottom:3em;left:0.5em;width:7em;background-color:var(--color-neutral-primary-lightest);z-index:400;box-shadow:0 1px 0.5rem rgb(2 19 34 / 12%), 0 0 0.25rem rgb(2 19 34 / 10%);border-radius:.125rem}.menu.svelte-145vp0j div.svelte-145vp0j{padding:0.25em 1em;cursor:pointer}";
	append(document.head, style);
}

// (40:12) {#if showMore}
function create_if_block(ctx) {
	let div1;
	let div0;
	let clickOutside_action;
	let mounted;
	let dispose;

	return {
		c() {
			div1 = element("div");
			div0 = element("div");
			div0.textContent = "Log out";
			attr(div0, "class", "svelte-145vp0j");
			attr(div1, "class", "menu svelte-145vp0j");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);

			if (!mounted) {
				dispose = [
					listen(div0, "click", /*logout*/ ctx[2]),
					action_destroyer(clickOutside_action = clickOutside.call(null, div1)),
					listen(div1, "clickoutside", /*clickoutside_handler*/ ctx[5])
				];

				mounted = true;
			}
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(div1);
			mounted = false;
			run_all(dispose);
		}
	};
}

function create_fragment(ctx) {
	let nav;
	let ul;
	let li0;
	let afbutton0;
	let t0;
	let li1;
	let afbutton1;
	let t1;
	let li2;
	let afbutton2;
	let t2;
	let current;

	afbutton0 = new AFButton({
			props: {
				kind: "primary",
				aspect: "basic",
				icon: "folder",
				label: "Explore",
				size: "small",
				active: /*showNavigation*/ ctx[1]
			}
		});

	afbutton0.$on("click", /*toggleNavigation*/ ctx[3]);

	afbutton1 = new AFButton({
			props: {
				kind: "primary",
				aspect: "basic",
				icon: "search",
				label: "Search",
				size: "small"
			}
		});

	afbutton2 = new AFButton({
			props: {
				kind: "primary",
				aspect: "basic",
				icon: "more-horizontal",
				label: "Settings",
				size: "small"
			}
		});

	afbutton2.$on("click", /*click_handler*/ ctx[4]);
	let if_block = /*showMore*/ ctx[0] && create_if_block(ctx);

	return {
		c() {
			nav = element("nav");
			ul = element("ul");
			li0 = element("li");
			create_component(afbutton0.$$.fragment);
			t0 = space();
			li1 = element("li");
			create_component(afbutton1.$$.fragment);
			t1 = space();
			li2 = element("li");
			create_component(afbutton2.$$.fragment);
			t2 = space();
			if (if_block) if_block.c();
			attr(li0, "class", "svelte-145vp0j");
			attr(li1, "class", "svelte-145vp0j");
			attr(li2, "class", "more-button svelte-145vp0j");
			attr(ul, "class", "svelte-145vp0j");
			attr(nav, "class", "svelte-145vp0j");
		},
		m(target, anchor) {
			insert(target, nav, anchor);
			append(nav, ul);
			append(ul, li0);
			mount_component(afbutton0, li0, null);
			append(ul, t0);
			append(ul, li1);
			mount_component(afbutton1, li1, null);
			append(ul, t1);
			append(ul, li2);
			mount_component(afbutton2, li2, null);
			append(li2, t2);
			if (if_block) if_block.m(li2, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const afbutton0_changes = {};
			if (dirty & /*showNavigation*/ 2) afbutton0_changes.active = /*showNavigation*/ ctx[1];
			afbutton0.$set(afbutton0_changes);

			if (/*showMore*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(li2, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i(local) {
			if (current) return;
			transition_in(afbutton0.$$.fragment, local);
			transition_in(afbutton1.$$.fragment, local);
			transition_in(afbutton2.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(afbutton0.$$.fragment, local);
			transition_out(afbutton1.$$.fragment, local);
			transition_out(afbutton2.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(nav);
			destroy_component(afbutton0);
			destroy_component(afbutton1);
			destroy_component(afbutton2);
			if (if_block) if_block.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let showMore = false;
	let showNavigation = false;

	function logout() {
		AbFabStore.update(state => ({ ...state, logged: false }));
	}

	function toggleNavigation() {
		EditorStore.update(state => {
			$$invalidate(1, showNavigation = !state.showNavigation);
			return { ...state, showNavigation };
		});

		window.dispatchEvent(new Event("resize"));
	}

	const click_handler = () => $$invalidate(0, showMore = !showMore);
	const clickoutside_handler = () => $$invalidate(0, showMore = false);

	return [
		showMore,
		showNavigation,
		logout,
		toggleNavigation,
		click_handler,
		clickoutside_handler
	];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-145vp0j-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Component;
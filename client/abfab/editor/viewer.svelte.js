/* generated by Svelte v3.37.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	space,
	text
} from "/db/my-app/node_modules/svelte/internal/index.mjs";

function add_css() {
	var style = element("style");
	style.id = "svelte-1npbbsi-style";
	style.textContent = "section.svelte-1npbbsi{margin-left:1em;width:calc(50vw - 1.5em)}iframe.svelte-1npbbsi{width:100%;border:0;display:block;height:50vh}";
	append(document.head, style);
}

function create_fragment(ctx) {
	let section;
	let iframe;
	let iframe_src_value;
	let t0;
	let textarea;
	let t1;
	let t2;
	let mounted;
	let dispose;

	return {
		c() {
			section = element("section");
			iframe = element("iframe");
			t0 = space();
			textarea = element("textarea");
			t1 = space();
			t2 = text(dataValue);
			if (iframe.src !== (iframe_src_value = /*path*/ ctx[0])) attr(iframe, "src", iframe_src_value);
			attr(iframe, "class", "svelte-1npbbsi");
			attr(section, "class", "svelte-1npbbsi");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, iframe);
			append(section, t0);
			append(section, textarea);
			append(section, t1);
			append(section, t2);

			if (!mounted) {
				dispose = listen(textarea, "keyup", /*keyup_handler*/ ctx[3]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*path*/ 1 && iframe.src !== (iframe_src_value = /*path*/ ctx[0])) {
				attr(iframe, "src", iframe_src_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
			mounted = false;
			dispose();
		}
	};
}

let dataValue = "";

function instance($$self, $$props, $$invalidate) {
	let { componentPath } = $$props;
	let dataError = false;
	let path = componentPath;
	let timer;
	let data = "";

	function debounce(value) {
		clearTimeout(timer);
		setTimeout(() => updateData(value), 750);
	}

	function updateData(value) {
		try {
			data = JSON.stringify(JSON.parse(value));
			$$invalidate(0, path = `${componentPath}?context=${data}`);
			console.log(path);
			dataError = false;
		} catch(e) {
			dataError = true;
		}
	}

	const keyup_handler = ({ target: { value } }) => debounce(value);

	$$self.$$set = $$props => {
		if ("componentPath" in $$props) $$invalidate(2, componentPath = $$props.componentPath);
	};

	return [path, debounce, componentPath, keyup_handler];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-1npbbsi-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, { componentPath: 2 });
	}
}

export default Component;
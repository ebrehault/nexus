/* generated by Svelte v3.37.0 */
import {
	SvelteComponent,
	append,
	attr,
	bubble,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	svg_element,
	xlink_attr
} from "/~/node_modules/svelte/internal/index.mjs";

function create_fragment(ctx) {
	let pa_icon;
	let svg;
	let use;
	let use_xlink_href_value;
	let svg_class_value;
	let mounted;
	let dispose;

	return {
		c() {
			pa_icon = element("pa-icon");
			svg = svg_element("svg");
			use = svg_element("use");
			xlink_attr(use, "xlink:href", use_xlink_href_value = "/~/abfab/pastanaga/icons.svg#" + /*icon*/ ctx[1]);
			attr(svg, "class", svg_class_value = "pa-" + /*size*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, pa_icon, anchor);
			append(pa_icon, svg);
			append(svg, use);

			if (!mounted) {
				dispose = listen(svg, "click", /*click_handler*/ ctx[2]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*icon*/ 2 && use_xlink_href_value !== (use_xlink_href_value = "/~/abfab/pastanaga/icons.svg#" + /*icon*/ ctx[1])) {
				xlink_attr(use, "xlink:href", use_xlink_href_value);
			}

			if (dirty & /*size*/ 1 && svg_class_value !== (svg_class_value = "pa-" + /*size*/ ctx[0])) {
				attr(svg, "class", svg_class_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(pa_icon);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { size = "medium" } = $$props; // small, medium, or large
	let { icon } = $$props;

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("icon" in $$props) $$invalidate(1, icon = $$props.icon);
	};

	return [size, icon, click_handler];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { size: 0, icon: 1 });
	}
}

export default Component;
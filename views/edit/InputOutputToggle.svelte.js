/* generated by Svelte v3.37.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	set_style,
	space,
	toggle_class
} from "/node_modules/svelte/internal/index.mjs";

function add_css() {
	var style = element("style");
	style.id = "svelte-14svxs3-style";
	style.textContent = ".input-output-toggle.svelte-14svxs3{display:grid;user-select:none;flex:0;grid-template-columns:1fr 40px 1fr;grid-gap:0.5em;align-items:center;width:100%;height:42px;border-top:1px solid var(--second)}input.svelte-14svxs3{display:block }span.svelte-14svxs3{color:#ccc }.active.svelte-14svxs3{color:#555 }";
	append(document.head, style);
}

function create_fragment(ctx) {
	let label;
	let span0;
	let t1;
	let input;
	let t2;
	let span1;
	let mounted;
	let dispose;

	return {
		c() {
			label = element("label");
			span0 = element("span");
			span0.textContent = "input";
			t1 = space();
			input = element("input");
			t2 = space();
			span1 = element("span");
			span1.textContent = "output";
			set_style(span0, "text-align", "right");
			attr(span0, "class", "svelte-14svxs3");
			toggle_class(span0, "active", !/*checked*/ ctx[0]);
			attr(input, "type", "checkbox");
			attr(input, "class", "svelte-14svxs3");
			attr(span1, "class", "svelte-14svxs3");
			toggle_class(span1, "active", /*checked*/ ctx[0]);
			attr(label, "class", "input-output-toggle svelte-14svxs3");
		},
		m(target, anchor) {
			insert(target, label, anchor);
			append(label, span0);
			append(label, t1);
			append(label, input);
			input.checked = /*checked*/ ctx[0];
			append(label, t2);
			append(label, span1);

			if (!mounted) {
				dispose = listen(input, "change", /*input_change_handler*/ ctx[1]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*checked*/ 1) {
				toggle_class(span0, "active", !/*checked*/ ctx[0]);
			}

			if (dirty & /*checked*/ 1) {
				input.checked = /*checked*/ ctx[0];
			}

			if (dirty & /*checked*/ 1) {
				toggle_class(span1, "active", /*checked*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(label);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { checked } = $$props;

	function input_change_handler() {
		checked = this.checked;
		$$invalidate(0, checked);
	}

	$$self.$$set = $$props => {
		if ("checked" in $$props) $$invalidate(0, checked = $$props.checked);
	};

	return [checked, input_change_handler];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-14svxs3-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, { checked: 0 });
	}
}

export default Component;
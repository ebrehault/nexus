/* generated by Svelte v3.37.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "/~/node_modules/svelte/internal/index.mjs";

function create_fragment(ctx) {
	let h1;
	let t0;
	let t1_value = /*context*/ ctx[0].year + "";
	let t1;
	let t2;
	let t3;
	let a0;
	let t5;
	let a1;

	return {
		c() {
			h1 = element("h1");
			t0 = text("Hi, Rendering ");
			t1 = text(t1_value);
			t2 = text("!");
			t3 = space();
			a0 = element("a");
			a0.textContent = "Content 1";
			t5 = space();
			a1 = element("a");
			a1.textContent = "Content 2";
			attr(a0, "href", "./content1");
			attr(a1, "href", "./content2");
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			append(h1, t1);
			append(h1, t2);
			insert(target, t3, anchor);
			insert(target, a0, anchor);
			insert(target, t5, anchor);
			insert(target, a1, anchor);
		},
		p(ctx, [dirty]) {
			if (dirty & /*context*/ 1 && t1_value !== (t1_value = /*context*/ ctx[0].year + "")) set_data(t1, t1_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t3);
			if (detaching) detach(a0);
			if (detaching) detach(t5);
			if (detaching) detach(a1);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { context } = $$props;

	$$self.$$set = $$props => {
		if ("context" in $$props) $$invalidate(0, context = $$props.context);
	};

	return [context];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { context: 0 });
	}
}

export default Component;